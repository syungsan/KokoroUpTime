<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:KokoroUpTime"
                    xmlns:outline_marker="clr-namespace:OutlineTextMaker">

    <Style TargetType="Button" x:Key="BubbleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30" >
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RuleBoard" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" Background="Transparent" BorderThickness="1" BorderBrush="#FFFFE64A">
                                <Path x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#FFFFE64A" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stretch="Fill"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#808080" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFFFEB6B" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFF9EA91" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="check" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="40" Height="40" CornerRadius="0" Background="Transparent" BorderThickness="4" BorderBrush="{TemplateBinding Foreground}">
                                    <Path x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="4" Data="M 3 5 L 5 8 L 13 0" Stretch="Fill"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#808080" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFFFEB6B" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFF9EA91" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="Orange">
        <Style.Setters>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFF8CBAD"/>
            <Setter Property="Outline" Value="#FFED7D31"/>
            <Setter Property="OutlineThickness" Value="4"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Purple">
        <Style.Setters>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="3" Direction="330" Color="Black" Opacity="0.5" BlurRadius="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FF9966FF"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="Yellow">
        <Style.Setters>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="4" Color="#FFFFFF00" Opacity="0.5" BlurRadius="10"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFFFFF00"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
            <Setter Property="Outline" Value="#FF5B9BD5"/>
            <Setter Property="OutlineThickness" Value="1.5"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="Yeow">
        <Style.Setters>
          
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFFFFF00"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
            <Setter Property="Outline" Value="#FF5B9BD5"/>
            <Setter Property="OutlineThickness" Value="1.5"/>
        </Style.Setters>
    </Style>
    
   <!--Chapter6-->
    <Style x:Key="selectableContentStyle" TargetType="{x:Type ItemsControl}">
        
    </Style>

    <DataTemplate x:Key="HandwritingInput">
        <DockPanel Width="1400" Height="130" VerticalAlignment="Top">
            <TextBlock x:Name="IndexText"  VerticalAlignment="Center">
                                <Run Text="・ " FontSize="60"/>
                                <Run Text="(" FontSize="80"/>
            </TextBlock>
            <TextBox x:Name="NameInputText" Width="250"/>
            <TextBlock x:Name="MidpointText" Text=")さん・・・ "  VerticalAlignment="Center">
                                <Run Text=")" FontSize="80"/>
                                <Run Text="さん・・・ " FontSize="60"/>
            </TextBlock>
            <TextBox x:Name="PersonalityInputText" Text="" Height="120" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="40"/>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="KeyboardInput">
        <DockPanel Width="1400" Height="130" VerticalAlignment="Top">
            <TextBlock x:Name="IndexText"  VerticalAlignment="Center">
                                <Run Text="・ " FontSize="60"/>
                                <Run Text="(" FontSize="80"/>
            </TextBlock>
            <InkCanvas x:Name="NameInputCanvas" Width="250"/>
            <TextBlock x:Name="MidpointText" Text=")さん・・・ "  VerticalAlignment="Center">
                                <Run Text=")" FontSize="80"/>
                                <Run Text="さん・・・ " FontSize="60"/>
            </TextBlock>
            <InkCanvas x:Name="PersonalityInputText" Height="120" VerticalAlignment="Center" />
        </DockPanel>
    </DataTemplate>

    
    <DataTemplate x:Key="SelectedTemplate">
        <Grid x:Name="NicePersonalityGrid">
            <TextBlock x:Name="NicePersonalityText" Text="{Binding}" FontSize="46" Padding="10"/>
            <Ellipse Stroke="Red" StrokeThickness="3"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UnSelectedTemplate">
        <Grid x:Name="NicePersonalityGrid">
            <TextBlock x:Name="NicePersonalityText" Text="{Binding}" FontSize="46" Padding="10"/>
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemContainerStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource UnSelectedTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource SelectedTemplate}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource UnSelectedTemplate}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<ListBox>
        <ListBox.ItemTemplate>
            <DataTemplate>
                <Grid x:Name="NicePersonalityGrid">
                    <TextBlock x:Name="NicePersonalityText" Text="{Binding}" FontSize="46" Padding="10"/>
                </Grid>
            </DataTemplate>
        </ListBox.ItemTemplate>
        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0,4"/>
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Azure"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>-->
</ResourceDictionary>