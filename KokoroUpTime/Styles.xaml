<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:KokoroUpTime"
                    xmlns:outline_marker="clr-namespace:OutlineTextMaker">

    <!--２重枠線,角丸,破線Button-->
    <Style TargetType="{x:Type Button}" x:Key="BubbleFrame">
        <Setter Property="Background" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="60" >
                        </Border>
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFBFE6FD"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="KindOfFeelingButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="MS PGothic"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="10"/>
                        <Viewbox StretchDirection="DownOnly" Margin="20">
                            <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFBFE6FD"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="SizeOfFeelingButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontFamily" Value="MS PGothic"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="SizeOfFeelingInputGrid">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Image x:Name="SizeOfFeelingInputImage" Source="/Images/size_of_feeling_input_button_fimage.png"/>
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFBFE6FD"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="BorderDashArrayButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="White"
                                    CornerRadius="65"/>
                        <Rectangle  Fill="{x:Null}" 
                                        StrokeDashArray="10 4" 
                                        Stroke="Red" 
                                        StrokeThickness="10" 
                                        RadiusX="60" 
                                        RadiusY="60"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFE7F3FF"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RuleBoard" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" Background="Transparent" BorderThickness="1" BorderBrush="#FFFFE64A">
                                <Path x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#FFFFE64A" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stretch="Fill"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#808080" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFFFEB6B" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFF9EA91" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="check" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="40" Height="40" CornerRadius="0" Background="Transparent" BorderThickness="4" BorderBrush="{TemplateBinding Foreground}">
                                    <Path x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="4" Data="M 3 5 L 5 8 L 13 0" Stretch="Fill"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#808080" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFFFEB6B" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFF9EA91" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--OutlineText用のスタイル　4種類 (下２種類は調整中)-->
    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="Orange">
        <Style.Setters>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFF8CBAD"/>
            <Setter Property="Outline" Value="#FFED7D31"/>
            <Setter Property="OutlineThickness" Value="4"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Purple">
        <Style.Setters>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="3" Direction="330" Color="Black" Opacity="0.5" BlurRadius="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FF9966FF"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="Yellow">
        <Style.Setters>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="4" Color="#FFFFFF00" Opacity="0.5" BlurRadius="10"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFFFFF00"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
            <Setter Property="Outline" Value="#FF5B9BD5"/>
            <Setter Property="OutlineThickness" Value="1.5"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="Yeow">
        <Style.Setters>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFFFFF00"/>
            <Setter Property="FontFamily" Value="Yu Gothic Light"/>
            <Setter Property="Outline" Value="#FF5B9BD5"/>
            <Setter Property="OutlineThickness" Value="1.5"/>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type outline_marker:OutlineText}" x:Key="MangaTitle">
        <Style.Setters>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="75"/>
            <Setter Property="Foreground" Value="#FFF8CBAD"/>
            <Setter Property="FontFamily" Value="/Fonts/HGRPP1.TTC#HG創英角ﾎﾟｯﾌﾟ体"/>
            <Setter Property="Outline" Value="#FFED7D31"/>
            <Setter Property="OutlineThickness" Value="4"/>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ShadowText">
        <Style.Setters>
            <Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="4" Direction="330" Color="Black" Opacity="0.5" BlurRadius="4"/>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--気持ちの種類選択用のListBox-->
    <DataTemplate x:Key="SelectedBadFeelingTemplate">
        <Grid x:Name="SelectBadFeelingGrid" >
            <Label Width="360"/>
            <TextBlock x:Name="SelectBadFeelingItemTextBlock" Text="{Binding}" TextWrapping="Wrap" Margin="40,10,0,0" FontSize="36" HorizontalAlignment="Left"/>
            <Ellipse Stroke="#FF1E90FF" StrokeThickness="3" Margin="25,5,25,0"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="UnSelectedBadFeelingTemplate">
        <Grid x:Name="SelectBadFeelingGrid" >
            <Label Width="360"/>
            <TextBlock x:Name="SelectBadFeelingItemTextBlock" Text="{Binding}" TextWrapping="Wrap" Margin="40,10,0,0" FontSize="36" HorizontalAlignment="Left"/>
        </Grid>
    </DataTemplate>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="SelectBadFeelingStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5,4"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource SelectedBadFeelingTemplate}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource UnSelectedBadFeelingTemplate}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightSkyBlue"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="SelectedGoodFeelingTemplate">
        <Grid x:Name="SelectGoodFeelingGrid" >
            <Label Width="360"/>
            <TextBlock x:Name="SelectGoodFeelingItemTextBlock" Text="{Binding}" TextWrapping="Wrap" Margin="40,10,0,0" FontSize="36" HorizontalAlignment="Left"/>
            <Ellipse Stroke="#FFEE2222" StrokeThickness="3" Margin="25,5,25,0"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="UnSelectedGoodFeelingTemplate">
        <Grid x:Name="SelectGoodFeelingGrid" >
            <Label Width="360"/>
            <TextBlock x:Name="SelectGoodFeelingItemTextBlock" Text="{Binding}" TextWrapping="Wrap" Margin="40,10,0,0" FontSize="36" HorizontalAlignment="Left"/>
        </Grid>
    </DataTemplate>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="SelectGoodFeelingStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5,4"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource SelectedGoodFeelingTemplate}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource UnSelectedGoodFeelingTemplate}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightCoral"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightPink"/>
            </Trigger>
            <!--<Trigger Property="AreAnyTouchesOver" Value="True">
                <Setter Property="Background" Value="LightPink"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <!--チャレンジタイム用のListBox-->
    <DataTemplate x:Key="SelectedTemplate">
        <Grid x:Name="NicePersonalityGrid">
            <TextBlock x:Name="NicePersonalityText" Text="{Binding}"/>
            <Ellipse Stroke="Black" StrokeThickness="1"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="UnSelectedTemplate">
        <Grid x:Name="NicePersonalityGrid">
            <TextBlock x:Name="NicePersonalityText" Text="{Binding}"/>
        </Grid>
    </DataTemplate>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemContainerStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Background="{TemplateBinding Background}" >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource UnSelectedTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource SelectedTemplate}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource UnSelectedTemplate}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFBFE6FD"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="OutputTextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontFamily" Value="/Fonts/UDDigiKyokashoN-R.ttc#UD デジタル 教科書体 N-R"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="InputTextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontFamily" Value="/Fonts/UDDigiKyokashoN-R.ttc#UD デジタル 教科書体 N-R"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--FontSize="" MaxLength="" 
        GotFocus="TriggerKeyboard" PreviewMouseDown="TextBoxMouseDown" 
        PreviewKeyDown="TextBoxKeyDown" PreviewKeyUp="TextBoxKeyDown" 
        PreviewTextInput="TextBoxPreviewTextInput"-->

    <Style TargetType="{x:Type InkCanvas}" x:Key="InputInkCanvas">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="DefaultDrawingAttributes">
            <Setter.Value>
                <DrawingAttributes Height="10" Width="10" Color="Black"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type InkCanvas}" x:Key="OutputInkCanvas">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="DefaultDrawingAttributes">
            <Setter.Value>
                <DrawingAttributes Height="10" Width="10" Color="Black"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Image}">
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>